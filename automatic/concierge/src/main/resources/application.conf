kamon {
  environment {
    service = "concierge"
    service = ${?KAMON_SERVICE_NAME}
  }

  trace {
    sampler = "adaptive"
  }

  apm {
    ingestion-api = ${?KAMON_APM_INGESTION_API}
    api-key = ${?KAMON_APM_KEY}
  }


  instrumentation.akka.filters {
    actors {
      track {
        includes = ["**/system/sharding/city/*", "**/system/sharding/city"]
        excludes = []
      }
    }

    routers {
      includes = ["**"]
    }

    groups {
      city-shard-actors {
        includes = ["**/system/sharding/city/*"]
        excludes = []
      }
    }
  }
}

kamon.modules.host-metrics.enabled = no

akka {
  loglevel = "INFO"
  stdout-loglevel = "INFO"

  actor {
    provider = "cluster"
    warn-about-java-serializer-usage = off
  }

  cluster {
    gossip-interval = 5 seconds
  }

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]

    netty.tcp {

      # Ports where the container will listen internally
      port = 2550
      hostname = ""
      bind-port = 2550
      bind-hostname = "0.0.0.0"

      # Ports that will be advertised to other cluster nodes
      hostname = ${?NOMAD_IP_akka}
      port = ${?NOMAD_HOST_PORT_akka}
    }
  }

  management.http {
    hostname = "0.0.0.0"
    port = 8558
  }

  coordinated-shutdown.phases.cluster-sharding-shutdown-region.timeout = 30 seconds
}

consul {
  self-address = "0.0.0.0:2550"
  self-address = ${?NOMAD_ADDR_akka}

  contact-points = ""
  contact-points = ${?CONSUL_CONTACTS}

  qualifier = ""
  qualifier = ${?QUALIFIER}
}